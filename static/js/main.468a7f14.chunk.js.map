{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","value","onChange","event","target","style","backgroundColor","color","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","prototype","PropTypes","string","about","defaultProps","Alert","alert","role","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","document","body","component_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.468a7f14.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n    <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n </li> \r\n    </ul>\r\n    </div>\r\n    <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable darkMode</label>\r\n</div>\r\n  \r\n</nav> \r\n  )\r\n}\r\n\r\nNavbar.prototype = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n                        title: 'write something here'\r\n                      };","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was cliked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase\", \"success\")\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was cliked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase\", \"success\")\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const [text, setText] = useState('');\r\n    return (\r\n    <div>\r\n        <div className=\"container\">\r\n            <h1 className={`text-${props.mode==='dark'?'light':'dark'}`}>{props.heading}</h1>\r\n            <div className=\"form-group\">\r\n            <textarea className=\"form-control my-3\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'grey', color: props.mode==='dark'?'white':'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className={`btn btn-${props.mode==='dark'?'danger':'primary'} mx-2`} onClick={handleUpClick}>convert to uppercase</button>\r\n            <button className={`btn btn-${props.mode==='dark'?'danger':'primary'} mx-2`} onClick={handleLoClick}>convert to lowercase</button>\r\n        </div>\r\n        <div className={`container text-${props.mode==='dark'?'light':'dark'}`}>\r\n            <h1>Your Text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\n// import About from './component/About';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from 'react-router-dom';\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is unable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n       msg: message,\n       type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1000);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#023E65';\n      showAlert(\"Dark mode has been Enabled\",\"success\");\n      document.title = 'textConverter - Dark mode'\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Dark mode has been Disabled\",\"success\");\n      document.title = 'textConverter - Normal mode'\n\n    }\n    \n  }\n  return (\n    <>\n    {/* <Router> */}\n      \n      <Navbar title=\"TextUtils\" mode={mode} aboutText=\"aboutus\" toggleMode={toggleMode}/>\n    {/* <TextForm showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode}/> */}\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n               \n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About/>} >\n\n            </Route> */}\n\n            <TextForm showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode}/>\n\n            {/* </Route>\n          </Routes> */}\n\n\n      </div>\n\n\n      {/* </Router> */}\n\n    </>    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}